[{"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\index.js":"1","C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\App.js":"2","C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\reportWebVitals.js":"3","C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\components\\FileUploader.js":"4"},{"size":517,"mtime":1613466038622,"results":"5","hashOfConfig":"6"},{"size":1019,"mtime":1613750621075,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1613466038622,"results":"8","hashOfConfig":"6"},{"size":4102,"mtime":1613839753916,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"uzzwcy",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\index.js",[],["21","22"],"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\App.js",["23","24"],"import React, {react, useState} from 'react';\r\nimport axios from 'axios';\r\nimport FileUploader from './components/FileUploader';\r\n\r\nconst App = () => {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const onFileSelect = (e) => {\r\n    setFile(e.target.files[0]);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>HELLO WORLD</h1>\r\n      <form>\r\n        <label htmlFor=\"file-input\">Select File: </label>\r\n        <input onChange={onFileSelect} id=\"file-input\" type=\"file\"></input>\r\n      </form>\r\n      {file && (\r\n          <FileUploader _file={file}>\r\n            {({bytesUploaded, pause, setPause, cancelUpload}) => (\r\n              <React.Fragment>\r\n                <h1>UPLOADED= {Math.round((bytesUploaded / file.size) * 100)} %</h1>\r\n                <button onClick={e => setPause(!pause)}>{pause ? '||' : '>>'}</button>\r\n                <button onClick={e => cancelUpload()}>cancel</button>\r\n              </React.Fragment>\r\n            )}\r\n          </FileUploader>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\reportWebVitals.js",[],"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\components\\FileUploader.js",["25","26","27"],"import {useState, useEffect} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies';\r\n\r\nconst stringToHash = (str) => {\r\n    var hash, chr;\r\n    for(var i = 0; i < str.length; i++){\r\n        chr = str.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0;\r\n    }\r\n    return hash;\r\n}\r\n\r\nconst FileUploader = ({children, _file, onFinish, chunkSize=(1048576 * 3)}) => {\r\n    // upload\r\n    const [bytesUploaded, setBytesUploaded] = useState(null);\r\n    const [chunkID, setChunkID] = useState(undefined);\r\n    const [cookieName, setCookieName] = useState(undefined);\r\n    const [file, setFile] = useState(null);\r\n    const [cancelTokenSource, setCancelTokenSource] = useState(null);\r\n\r\n    // state\r\n    const [pause, setPause] = useState(true);\r\n    const [newUpload, setNewUpload] = useState(true);\r\n\r\n    useEffect(() => {\r\n        console.log(`[uploaded]: ${bytesUploaded}`);\r\n        if(file !== _file){\r\n            setFile(_file);\r\n            init(_file);\r\n        }else{\r\n            if(!pause){\r\n                const remainSize = file.size - bytesUploaded;\r\n                if(remainSize > 0) prepareChunk();\r\n            }\r\n        }\r\n    }, [bytesUploaded, pause, file, _file]);\r\n\r\n    const init = (file) => {\r\n        var cookieName = stringToHash(`${file.name}-${file.lastModified}-${file.size}`);\r\n        var chunkid = cookie.load(cookieName);\r\n        console.log(`[cookie]: ${cookieName}`);\r\n        if(!chunkid){\r\n            chunkid = uuidv4();\r\n            cookie.save(cookieName, chunkid);\r\n        }\r\n\r\n        axios.get(`http://localhost:8080/upload/${chunkid}/`).then((resp) => {\r\n            setBytesUploaded(resp.data.uploaded);\r\n            console.log(resp.data);\r\n        }).catch((err) => {\r\n            console.error(err);\r\n        });\r\n\r\n        setChunkID(chunkid);\r\n        setCookieName(cookieName);\r\n    }\r\n\r\n    const prepareChunk = () => {\r\n        const totalFileSize = file.size;\r\n        const remainSize = totalFileSize - bytesUploaded;\r\n        const start = totalFileSize - remainSize;\r\n        const end = start + Math.min(chunkSize, remainSize);\r\n        const chunk = file.slice(start, end);\r\n        uploadChunk(chunk, start, end, remainSize, totalFileSize);\r\n    }\r\n\r\n    const uploadChunk = (chunk, start, end, remainSize, total) => {\r\n        var form = new FormData();\r\n        form.append(\"filename\", file.name);\r\n        form.append(\"chunk\", chunk);\r\n\r\n        var url;\r\n        if(remainSize > 0 && remainSize > chunkSize)\r\n            url = `http://localhost:8080/upload/${chunkID}/`;\r\n        else\r\n            url = `http://localhost:8080/upload/complete/${chunkID}/`;\r\n\r\n        const source = axios.CancelToken.source();\r\n        setCancelTokenSource(source);\r\n\r\n        if(chunkID){\r\n            axios.post(url, form, {\r\n                cancelToken: source.token,\r\n                headers: {\r\n                    'Content-Range': `bytes ${start}-${end}/${total}`,\r\n                    'content-type': 'multipart/form-data',\r\n                }\r\n            }).then((resp) => {\r\n                setBytesUploaded(resp.data.uploaded);\r\n                if(resp.data.uploaded === file.size)\r\n                    finish();\r\n            }).catch((err) => {\r\n                console.error(err);\r\n                setPause(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    const cancelUpload = () => {\r\n        if(chunkID && bytesUploaded > 0){\r\n            if(cancelTokenSource)\r\n                cancelTokenSource.cancel(`${chunkID} file upload canceled.`);\r\n            finish();\r\n            axios.delete(`http://localhost:8080/upload/cancel/${chunkID}/`).then((resp) => {\r\n                // finish();\r\n            }).catch(err => {\r\n                console.error(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    const finish = () => {\r\n        cookie.remove(cookieName);\r\n        setFile(null);\r\n        setPause(true);\r\n        setBytesUploaded(null);\r\n    }\r\n\r\n    return children({bytesUploaded, pause, setPause, cancelUpload});\r\n}\r\n\r\nexport default FileUploader;",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":16,"nodeType":"34","messageId":"35","endLine":1,"endColumn":21},{"ruleId":"32","severity":1,"message":"36","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":13},{"ruleId":"32","severity":1,"message":"37","line":26,"column":12,"nodeType":"34","messageId":"35","endLine":26,"endColumn":21},{"ruleId":"32","severity":1,"message":"38","line":26,"column":23,"nodeType":"34","messageId":"35","endLine":26,"endColumn":35},{"ruleId":"39","severity":1,"message":"40","line":39,"column":8,"nodeType":"41","endLine":39,"endColumn":43,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'newUpload' is assigned a value but never used.","'setNewUpload' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'prepareChunk'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [bytesUploaded, pause, file, _file, prepareChunk]",{"range":"48","text":"49"},[1234,1269],"[bytesUploaded, pause, file, _file, prepareChunk]"]