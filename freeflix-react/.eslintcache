[{"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\index.js":"1","C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\App.js":"2","C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\reportWebVitals.js":"3","C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\components\\FileUploader.js":"4"},{"size":517,"mtime":1613389185568,"results":"5","hashOfConfig":"6"},{"size":993,"mtime":1613394302246,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1613389185575,"results":"8","hashOfConfig":"6"},{"size":4209,"mtime":1613395215824,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uzzwcy",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\index.js",[],"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\App.js",["21"],"import React, {react, useState} from 'react';\r\nimport FileUploader from './components/FileUploader';\r\n\r\nconst App = () => {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const onFileSelect = (e) => {\r\n    setFile(e.target.files[0]);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>HELLO WORLD</h1>\r\n      <form>\r\n        <label htmlFor=\"file-input\">Select File: </label>\r\n        <input onChange={onFileSelect} id=\"file-input\" type=\"file\"></input>\r\n      </form>\r\n      {file && (\r\n          <FileUploader _file={file}>\r\n            {({bytesUploaded, pause, setPause, cancelUpload}) => (\r\n              <React.Fragment>\r\n                <h1>UPLOADED= {Math.round((bytesUploaded / file.size) * 100)} %</h1>\r\n                <button onClick={e => setPause(!pause)}>{pause ? '||' : '>>'}</button>\r\n                <button onClick={e => cancelUpload()}>cancel</button>\r\n              </React.Fragment>\r\n            )}\r\n          </FileUploader>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["22","23"],"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\reportWebVitals.js",[],"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\components\\FileUploader.js",["24","25","26"],"import {useState, useEffect} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies';\r\n\r\nconst defaultChunkSize = (1024 * 1024);\r\n\r\nconst stringToHash = (str) => {\r\n    var hash, chr;\r\n    for(var i = 0; i < str.length; i++){\r\n        chr = str.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0;\r\n    }\r\n    return hash;\r\n}\r\n\r\nconst FileUploader = ({children, _file, onFinish}) => {\r\n    // upload\r\n    const [bytesUploaded, setBytesUploaded] = useState(0);\r\n    const [chunkID, setChunkID] = useState(undefined);\r\n    const [fileName, setFileName] = useState(undefined);\r\n    const [file, setFile] = useState(null);\r\n    const [cancelTokenSource, setCancelTokenSource] = useState(null);\r\n\r\n    // state\r\n    const [pause, setPause] = useState(true);\r\n    const [cancel, setCancel] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(file !== _file){\r\n            setFile(_file);\r\n            init(_file);\r\n        }else{\r\n            if(!pause){\r\n                const remainSize = file.size - bytesUploaded;\r\n                if(remainSize > 0) prepareChunk();\r\n            }\r\n        }\r\n    }, [bytesUploaded, pause, file, _file]);\r\n\r\n    const init = async (file) => {\r\n        var _fileName = stringToHash(`${file.name}-${file.lastModified}-${file.size}`);\r\n        var _chunkID = cookie.load(_fileName);\r\n        if(!_chunkID){\r\n            _chunkID = uuidv4();\r\n            cookie.save(_fileName, _chunkID);\r\n        }\r\n        try {\r\n            const resp = await axios.get(`http://localhost:8080/upload/${_chunkID}/`);\r\n            setBytesUploaded(resp.data.uploaded);\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n        console.log(_chunkID);\r\n        setChunkID(_chunkID);\r\n        setFileName(_fileName);\r\n    }\r\n\r\n    const prepareChunk = () => {\r\n        const totalFileSize = file.size;\r\n        const remainSize = totalFileSize - bytesUploaded;\r\n        const start = totalFileSize - remainSize;\r\n        const end = start + Math.min(defaultChunkSize, remainSize);\r\n        const chunk = file.slice(start, end);\r\n        if(remainSize > 0 && remainSize > defaultChunkSize)\r\n            uploadChunk(chunk, start, end, totalFileSize);\r\n        else\r\n            uploadComplete(chunk, start, end, totalFileSize);\r\n    }\r\n\r\n    const uploadChunk = async (chunk, start, end, total) => {\r\n        console.log(`bytes ${start}-${end}/${total}`);\r\n        const source = axios.CancelToken.source();\r\n        setCancelTokenSource(source);\r\n        setCancel()\r\n        if(chunkID)\r\n            try {\r\n                const resp = await axios.post(`http://localhost:8080/upload/${chunkID}/`, chunk, {\r\n                    cancelToken: source.token,\r\n                    headers: {\r\n                        'Content-Range': `bytes ${start}-${end}/${total}`\r\n                    }\r\n                });\r\n                setBytesUploaded(resp.data.uploaded);\r\n            } catch (error) {\r\n                console.error(error.message);\r\n                setPause(true);\r\n            }\r\n    }\r\n\r\n    const uploadComplete = async (chunk, start, end, total) => {\r\n        try {\r\n            const resp = await axios.post(`http://localhost:8080/upload/complete/${chunkID}/`, chunk, {\r\n                headers: {\r\n                    'Content-Range': `bytes ${start}-${end}/${total}`\r\n                }\r\n            });\r\n            finish();\r\n        } catch (error) {\r\n            console.error(error.message);\r\n            setPause(true);\r\n        }\r\n    }\r\n\r\n    const cancelUpload = async () => {\r\n        if(chunkID)\r\n            try {\r\n                if(cancelTokenSource) cancelTokenSource.cancel(`${chunkID} file upload canceled.`);\r\n                axios.delete(`http://localhost:8080/upload/cancel/${chunkID}/`);\r\n                finish();\r\n            } catch (error) {\r\n                console.error(error.message);\r\n            }\r\n    }\r\n\r\n    const finish = () => {\r\n        cookie.remove(fileName);\r\n        setPause(true);\r\n        setBytesUploaded(0);\r\n    }\r\n\r\n    return children({bytesUploaded, pause, setPause, cancelUpload});\r\n}\r\n\r\nexport default FileUploader;",{"ruleId":"27","severity":1,"message":"28","line":1,"column":16,"nodeType":"29","messageId":"30","endLine":1,"endColumn":21},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"27","severity":1,"message":"35","line":28,"column":12,"nodeType":"29","messageId":"30","endLine":28,"endColumn":18},{"ruleId":"36","severity":1,"message":"37","line":40,"column":8,"nodeType":"38","endLine":40,"endColumn":43,"suggestions":"39"},{"ruleId":"27","severity":1,"message":"40","line":94,"column":19,"nodeType":"29","messageId":"30","endLine":94,"endColumn":23},"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","no-native-reassign",["41"],"no-negated-in-lhs",["42"],"'cancel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'prepareChunk'. Either include it or remove the dependency array.","ArrayExpression",["43"],"'resp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"44","fix":"45"},"Update the dependencies array to be: [bytesUploaded, pause, file, _file, prepareChunk]",{"range":"46","text":"47"},[1186,1221],"[bytesUploaded, pause, file, _file, prepareChunk]"]