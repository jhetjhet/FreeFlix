[{"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\index.js":"1","C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\App.js":"2","C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\reportWebVitals.js":"3","C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\components\\FileUploader.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":958,"mtime":1612452153161,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":4181,"mtime":1612452182742,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"uzzwcy",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\index.js",[],["20","21"],"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\App.js",["22"],"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\reportWebVitals.js",[],"C:\\Users\\JHET\\Videos\\FreeFlix\\FreeFlix\\freeflix-react\\src\\components\\FileUploader.js",["23","24","25","26"],"import {useState, useEffect} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies';\r\n\r\nconst defaultChunkSize = (1024 * 1024);\r\n\r\nconst stringToHash = (str) => {\r\n    var hash, chr;\r\n    for(var i = 0; i < str.length; i++){\r\n        chr = str.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0;\r\n    }\r\n    return hash;\r\n}\r\n\r\nconst FileUploader = ({children, _file, onFinish}) => {\r\n    // upload\r\n    const [bytesUploaded, setBytesUploaded] = useState(0);\r\n    const [fileExt, setFileExt] = useState(undefined);\r\n    const [chunkID, setChunkID] = useState(undefined);\r\n    const [fileName, setFileName] = useState(undefined);\r\n    const [file, setFile] = useState(null);\r\n\r\n    // state\r\n    const [pause, setPause] = useState(true);\r\n    const [cancel, setCancel] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(file !== _file){\r\n            setFile(_file);\r\n            init(_file);\r\n        }else{\r\n            if(!pause){\r\n                if(cancel) cancelUpload();\r\n                else{\r\n                    const remainSize = file.size - bytesUploaded;\r\n                    if(remainSize > 0) prepareChunk();\r\n                }\r\n            }\r\n        }\r\n    }, [bytesUploaded, pause, file, _file]);\r\n\r\n    const init = async (file) => {\r\n        var _fileName = stringToHash(`${file.name}-${file.lastModified}-${file.size}`);\r\n        var _chunkID = cookie.load(_fileName);\r\n        if(!_chunkID){\r\n            _chunkID = uuidv4();\r\n            cookie.save(_fileName, _chunkID);\r\n        }\r\n        // var re = /(?:\\.([^.]+))?$/;\r\n        try {\r\n            const resp = await axios.get(`http://localhost:8080/upload/${_chunkID}/`);\r\n            setBytesUploaded(resp.data.uploaded);\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n        // console.log(re.exec(file.name)[1]);\r\n        console.log(_chunkID);\r\n        setChunkID(_chunkID);\r\n        setFileName(_fileName);\r\n    }\r\n\r\n    const prepareChunk = () => {\r\n        const totalFileSize = file.size;\r\n        const remainSize = totalFileSize - bytesUploaded;\r\n        const start = totalFileSize - remainSize;\r\n        const end = start + Math.min(defaultChunkSize, remainSize);\r\n        const chunk = file.slice(start, end);\r\n        if(remainSize > 0 && remainSize > defaultChunkSize)\r\n            uploadChunk(chunk, start, end, totalFileSize);\r\n        else\r\n            uploadComplete(chunk, start, end, totalFileSize);\r\n    }\r\n\r\n    const uploadChunk = async (chunk, start, end, total) => {\r\n        console.log(`bytes ${start}-${end}/${total}`);\r\n        if(chunkID)\r\n            try {\r\n                const resp = await axios.post(`http://localhost:8080/upload/${chunkID}/`, chunk, {\r\n                    headers: {\r\n                        'Content-Range': `bytes ${start}-${end}/${total}`\r\n                    }\r\n                });\r\n                setBytesUploaded(resp.data.uploaded);\r\n            } catch (error) {\r\n                console.error(error.message);\r\n                setPause(true);\r\n            }\r\n    }\r\n\r\n    const uploadComplete = async (chunk, start, end, total) => {\r\n        try {\r\n            const resp = await axios.post(`http://localhost:8080/upload/complete/${chunkID}/`, chunk, {\r\n                headers: {\r\n                    'Content-Range': `bytes ${start}-${end}/${total}`\r\n                }\r\n            });\r\n            finish();\r\n        } catch (error) {\r\n            console.error(error.message);\r\n            setPause(true);\r\n        }\r\n    }\r\n\r\n    const cancelUpload = async () => {\r\n        if(chunkID)\r\n            try {\r\n                axios.delete(`http://localhost:8080/upload/cancel/${chunkID}/`);\r\n                console.log('CANCELED');\r\n                finish();\r\n            } catch (error) {\r\n                console.error(error.message);\r\n            }\r\n    }\r\n\r\n    const finish = () => {\r\n        cookie.remove(fileName);\r\n        setPause(true);\r\n        setCancel(false);\r\n        setBytesUploaded(0);\r\n    }\r\n\r\n    return children({bytesUploaded, pause, setPause, setCancel});\r\n}\r\n\r\nexport default FileUploader;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":16,"nodeType":"33","messageId":"34","endLine":1,"endColumn":21},{"ruleId":"31","severity":1,"message":"35","line":21,"column":12,"nodeType":"33","messageId":"34","endLine":21,"endColumn":19},{"ruleId":"31","severity":1,"message":"36","line":21,"column":21,"nodeType":"33","messageId":"34","endLine":21,"endColumn":31},{"ruleId":"37","severity":1,"message":"38","line":43,"column":8,"nodeType":"39","endLine":43,"endColumn":43,"suggestions":"40"},{"ruleId":"31","severity":1,"message":"41","line":95,"column":19,"nodeType":"33","messageId":"34","endLine":95,"endColumn":23},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'fileExt' is assigned a value but never used.","'setFileExt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cancel', 'cancelUpload', and 'prepareChunk'. Either include them or remove the dependency array.","ArrayExpression",["44"],"'resp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"45","fix":"46"},"Update the dependencies array to be: [bytesUploaded, pause, file, _file, cancel, cancelUpload, prepareChunk]",{"range":"47","text":"48"},[1265,1300],"[bytesUploaded, pause, file, _file, cancel, cancelUpload, prepareChunk]"]